
import turtle

import random
'''
         
def squ(len): 
    turtle.forward(len)
    turtle.left(90)
    turtle.forward(len)
    turtle.left(90)
    turtle.forward(len)
    turtle.left(90)
    turtle.forward(len)
    turtle.left(90)          
      
    for i in range(3):    
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
    
    turtle.left(90)   
    turtle.forward(len/3)
    
    for i in range(2):    
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
    
    turtle.left(90)   
    turtle.forward(len/3)
    
    for i in range(2):    
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        
    turtle.left(90)   
    turtle.forward(len/3)
    
    for i in range(1):    
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        turtle.left(90)
        turtle.forward(len/3)
        
for i in range(4):
        turtle.forward(len/3)
        turtle.left(90)
    turtle.forward(len/3)
        
    turtle.forward(len/3)        
       
       
       
    for i in range(3):    
        for i in range(4):
            turtle.forward(len/3)
            turtle.left(90)
        turtle.forward(len/3)
    
    turtle.left(90) 
    
def squ(len):         
    for i in range(4):
        turtle.forward(len/3)
        for i in range(2): 
            if len > 20:
                squ(len/3)  
            for i in range(4):
                turtle.forward(len/3)
                turtle.left(90) 
            turtle.forward(len/3)
        turtle.left(90)
        
        
        turtle.color('black')
        turtle.begin_fill()
        
def squ(len):         
    for i in range(4):
        turtle.forward(len/3)
        for i in range(2): 
            if len > 20:
                squ(len/3)  
            for i in range(4):
                turtle.forward(len/3)
                turtle.left(90) 
            turtle.forward(len/3)
        turtle.left(90)
      
def squ(len):         
    for i in range(4):
        turtle.color('black')
        turtle.begin_fill()
        #turtle.forward(len/3)
        for i in range(2): 

              
            for i in range(4):
                turtle.forward(len/3)
                turtle.left(90) 
            
            turtle.forward(len/3)
            
            if len > 20:
                squ(len/3)
                
        turtle.forward(len/3)
        turtle.left(90)
        turtle.end_fill()      
   
def squ(len):         
    for i in range(4):
        turtle.color('black')
        turtle.begin_fill()
        for i in range(2): 
            if len > 20:
                squ(len/3)
            for i in range(4):
                turtle.forward(len/3)
                turtle.left(90) 
            turtle.forward(len/3)        
        turtle.forward(len/3)
        turtle.left(90)
        turtle.end_fill()   

def squ(len):
    if len < 10:
        turtle.color('black')
        turtle.begin_fill()
    
        for i in range(4):
            turtle.forward(len)
            turtle.left(90) 
        turtle.end_fill()
        
    else:         
        for i in range(4):
            
            for i in range(2):
                squ(len/3)
                turtle.forward(len/3)        
            
            turtle.forward(len/3)
            turtle.left(90)
     
     if len < 10:
        #turtle.forward(len)
        turtle.color('black')
        turtle.begin_fill()
        for i in range(4):
            turtle.forward(len)
            turtle.left(90)
        turtle.end_fill()
     
     
def squ1(len):            
    for i in range(2):
            
        if len > 10:
               
            for t in range(4):
                squ1(len/3)
                turtle.forward(len/3)
                turtle.left(90)
                #turtle.forward(len/3)
            
            #if i == 1:
            #    turtle.forward(len)
            
        if len < 10:
            #turtle.forward(len)
            turtle.color('black')
            turtle.begin_fill()
            for t in range(4):
                turtle.forward(len)
                turtle.left(90)
            turtle.end_fill()
            turtle.forward(len)
            #turtle.left(90)     
     
     
def squ(len):         
    for i in range(4):
        for i in range(2):
            turtle.color('black')
            turtle.begin_fill() 
            if len > 5:
                squ(len/3)
                
            for i in range(4):
                turtle.forward(len)
                turtle.left(90)
            
            turtle.end_fill()
            turtle.forward(len)
            
        turtle.forward(len)
        turtle.left(90)     
     

def squ(len):    
    for i in range(4):
        
        for a in range(2):

            turtle.begin_fill() 
            if len > 10:
                squ(len/3)
            
            for s in range(4):
                turtle.forward(len)
                turtle.left(90)
        
            turtle.end_fill()
            turtle.forward(len)
            
        turtle.forward(len)
        turtle.left(90)


def squ1(len):            
    for i in range(2):
            
        if len > 10:
               
            for t in range(4):
                squ(len/3)
                turtle.forward(len/3)
                turtle.left(90)
                
            
            
            turtle.forward(len)
            
        if len < 10:
            
            turtle.color('black')
            turtle.begin_fill()
            
            for t in range(4):
                turtle.forward(len)
                turtle.left(90)
                
            turtle.end_fill()
            turtle.forward(len)
            



def s(n, l):

    if n == 0: # stop conditions

        # draw filled rectangle

        turtle.color('black')
        turtle.begin_fill()
        for _ in range (4):
            turtle.forward(l)
            turtle.left(90)
        turtle.end_fill()

    else: # recursion

        # around center point create 8 smalles rectangles.
        # create two rectangles on every side 
        # so you have to repeat it four times

        for _ in range(4):
            # first rectangle
            s(n-1, l/3)    
            turtle.forward(l/3)

            # second rectangle
            s(n-1, l/3)    
            turtle.forward(l/3)

            # go to next corner
            turtle.forward(l/3)
            turtle.left(90)

        # update screen
        turtle.update()
        
''' 

       
#turtle.speed(10)

turtle.tracer(0)

turtle.colormode(255)
turtle.color('black')

turtle.penup()
turtle.setposition(-150,-150)
turtle.pendown()


def fac(len):             
    for i in range(5):
        turtle.forward(len)
        turtle.left((4/5)*360)
        if len > 5:
            fac(len/2) ,turtle.update()
    #turtle.update()

                      
def tri(len): 
    turtle.begin_fill()            
    for i in range(3):
        turtle.forward(len)
        turtle.left((1/3)*360)
        if len > 10:
            turtle.end_fill()
            tri(len/2)                                



def s(n, l):
    if n == 0: # stop conditions

        # draw filled rectangle
        turtle.begin_fill()
        for _ in range (4):
            turtle.forward(l*3)
            turtle.left(90)
        turtle.end_fill()
        
    else: # recursion

        # around center point create 8 smalles rectangles.
        # create two rectangles on every side 
        # so you have to repeat it four times
        
        for _ in range(4):
            # first rectangle
            (s(n-1, l/3) ,turtle.forward(l))
            
            # second rectangle
            (s(n-1, l/3) ,turtle.forward(l))
            
            # go to next corner
            turtle.forward(l)
            turtle.left(90)

        # update screen
        turtle.update()

        
         



#fac(260)

#tri(400)

#squ(480)

#squ(160)

#s(4, 160)

#turtle.tracer(1)

while True:
    turtle.color(tuple(random.randint(0, 255) for _ in range(3)))
    s(4, 160)
    turtle.color('white')
    s(3, 160)
    turtle.clear()
